/*
 * Copyright (c) 2014-2016 Manuel Mauky
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'maven'
    id 'signing'
    id 'jacoco'
    id 'idea'
    id 'net.nemerosa.versioning' version '2.5.0'
    id 'com.github.ben-manes.versions' version '0.13.0'
    id 'com.github.hierynomus.license' version '0.11.0'
}

Date buildTimeAndDate = new Date()
ext {
    buildBy = System.properties['user.name']
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
    buildRevision = versioning.info.commit
    buildCreatedBy = "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString()
}

apply from: file('gradle/maven_upload.gradle')
apply from: file('gradle/publishing.gradle')
apply from: file('gradle/code-quality.gradle')

repositories {
    mavenLocal()
    jcenter()
    maven{
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

configurations {
    markdownDoclet
}

dependencies {
    markdownDoclet 'ch.raffael.pegdown-doclet:pegdown-doclet:1.3'

    // testing
    testCompile 'eu.lestard:assertj-javafx:0.3.0'
    testCompile 'org.assertj:assertj-core:3.5.2'
    testCompile 'junit:junit:4.12'
}

jacoco {
    toolVersion = jacocoVersion
}

javadoc.options{
    links "http://docs.oracle.com/javase/8/docs/api/", "http://docs.oracle.com/javase/8/javafx/api"

    docletpath = configurations.markdownDoclet.files.asType(List)
    doclet = 'ch.raffael.doclets.pegdown.PegdownDoclet'
    addStringOption('parse-timeout', '10')
}
